<!DOCTYPE html>
<!--tudo tem que estar entre as tags html -->
<html lang="pt-br">

<head>
    <!-- define conjuntos de caracteres que serao utilizados-->
    <meta charset="UTF-8">

    <title> ATIVIDADE 3 </title>

</head>

<!--tudo que sera mostrado na pagina fica dentro do tag body -->

<body bgcolor="#FFFFF0">

    <!-- H1: primeiro nivel- maior titulo- aparece apenas uma vez na pagina -->
    <h1>
        <center>
            <font color="#20B2AA" face="Old Standard TT" size="36">FRAMEWORKS </font>
        </center>
    </h1>
    <center>
        <figure>


            <img src="quebracabeca.jpg" title=" figura1 " width="600" height="400">
            <figcaption> <a href="https://www.lewagon.com/pt-BR/blog/o-que-e-framework"> https://www.lewagon.com/pt-BR/blog/o-que-e-framework </a>

            </figcaption>


        </figure>
    </center>


    <!-- ol: lista  ordenada-->
    <ol>

        <!--li: topicos da lista-->
        <li> <a href="#1introducao">Introdução </a></li>

        <li> <a href="#2definicao">O que é um framework</a> </li>
        <li> <a href="#3vantagens">Vantagens e cuidados ao se utilizar frameworks</a> </li>
        <dd> <a href="#vantagen"> 3.1 Vantagens </a> </dd>
        <dd> <a href="#cuidados"> 3.2 Cuidados </a> </dd>

        <li><a href="#4diferenca"> Diferenças entre Biblioteca e Framework</a></li>
        <li><a href="#5framework">Principais Frameworks utilizados</a></li>

        <dd><a href="#5.1front">5.1 Frameworks front-end</a> </dd>
        <dd><a href="#5.2back">5.2 Frameworks back-end</a></dd>
        <dd><a href="#5.3javascript">5.3 Frameworks em JavaScript</a></dd>

        <li><a href="#6conclusa">Conclusão</a> </li>
        <li><a href="#7referencia"> Referências</a> </li>
    </ol>


    <h2 id="1introducao">1. Introdução </h2>

    <p> Frameworks são vastamente utilizados por programadores e desenvolvedores, cujo objetivo é usufruir de estruturas preestabelecidas,as quais também foram desenvolvidas por uma comunidade plural de programadores, logo essas estruturas já foram testadas, assim elas oferecem um alto grau de segurança e padronização para o código do desenvolvedor que está utilizando determinado framework, bem como aumenta a produtividade do mesmo. A seguir serão apresentados o conceito de framework, suas vantagens, os cuidados que se deve tomar ao se escolher um framework, as diferenças entre framework e biblioteca, bem como os principais frameworks utilizados no desenvolvimento de softwares, tanto front end, quanto back end. </p>

    <h2 id="2definicao">2. O que é um framework </h2>
    <p> Definir o que é um framework em programação, não é uma tarefa simples, uma vez que existem diferentes frameworks e esses por sua vez, possuem uma coleção de diferentes ferramentas que o compõem, como um conjunto de códigos que implementam funcionalidades genéricas e úteis para diferentes projetos, por exemplo uma rotina de teste. Além disso, um framework pode possuir , instruções para desenvolvimento de interfaces, templates, arquivos, ferramentas para a utilização do framework e até mesmo programas completos.</p>

    <p> Assim, uma das definições aceitas para o termo framework é “ Uma coleção de classes abstratas, objetos e padrões dedicados a resolver determinados problemas em uma arquitetura flexível e extensível.”</p>

    <p> Logo, uma boa analogia seria imaginar essas classes , objetos e padrões como sendo, peças de quebra-cabeça universais , que se encaixam em diferentes quebra-cabeças , sendo esses os diferentes projetos que se utilizaram do framework. Contudo, como existem quebra-cabeças de tamanhos e tipos diferentes, nem todas as peças que compõem o framework precisam ser utilizadas, para a conclusão de um projeto, ficando a critério do desenvolvedor escolher as peças mais úteis. Portanto, um framework tem como objetivo resolver problemas recorrentes, com procedimentos genéricos
    </p>

    <h2 id="3vantagens">3. Vantagens e cuidados ao se utilizar frameworks </h2>
    <p>Existem inúmeras vantagens em se utilizar frameworks na hora de se desenvolver aplicações, uma das mais intuitivas é a agilidade na codificação e a otimização de tempo no desenvolvimento do projeto, uma vez que o framework disponibiliza ao programador funcionalidades prontas e adaptáveis conforme a necessidade do projeto. Contudo, alguns cuidados são necessários na hora da escolha do framework.</p>

    <h3 id="vantagen"> 3.1 Vantagens</h3>
    <ul>
        <li>
            <p> Os esforços se voltam para os problemas de alto nível da aplicação, em vez detalhes de configuração, rotinas de teste e validação e padrões do projetos, ficaram a cargo do framework</p>
        </li>
        <li>
            <p> A curva de aprendizagem tênue é pequena, pois os frameworks mais utilizados possuem uma grande quantidade de documentação e uma comunidade ativa, o que é sempre muito importante no compartilhamento e obtenção de conhecimento.</p>
        </li>
        <li>
            <p>Redução na incidência de bugs, pois os códigos dos frameworks costumam passar por diversos testes antes de serem disponibilizados;</p>
        </li>
        <li>
            <p>Padronização de códigos, tendo em vista que o desenvolvedor deve seguir o mesmo padrão de codificação utilizado no framework;</p>
        </li>
        <li>
            <p> Redução de custos operacionais, pois facilita e agiliza o desenvolvimento de um software;</p>
        </li>
        <li>
            <p> Maior consistência das aplicações, visto que as falhas são menores do que se elas tivessem sido produzidas integralmente desde o início.</p>
        </li>
        <li>
            <p>diminuição na redundância do código </p>
        </li>


    </ul>

    <h3 id="cuidados"> 3.2 Cuidados</h3>
    <p>Como os frameworks são construídos a partir de uma linguagem de programação, faz se necessário que o programador, ao utilizar um framework, tenha conhecimentos suficientes da linguagem de programação sob a qual o framework foi construído. </p>

    <p>Além disso, deve-se atentar ao se escolher qual framework usar, uma vez que, a escolha do framework errado, pode resultar no objetivo contrário da utilização de um framework, que é facilitar o desenvolvimento do projeto, culminando no mal funcionamento do produto final que está sendo desenvolvido. </p>
    <p>Logo, dentre os cuidados que devem ser tomados ao se utilizar um framework estão:</p>
    <dd> -Qual o objetivo da utilização desse framework? </dd>
    <dd> - Quando ele foi adicionado no código principal? </dd>
    <dd> - De qual biblioteca ele foi extraído?</dd>
    <dd> - Quais as mudanças feitas no arquivo original? </dd>



    <h2 id="4diferenca">4. Diferenças entre Biblioteca e Framework </h2>


    <p> Primeiro, uma biblioteca se refere a uma coleção de rotinas pré compiladas que serão usadas pelo programador, contudo diferente dos frameworks, as bibliotecas são chamadas pelo código, do programador que as usa, enquanto o framework tem o comportamento oposto, é ele quem chama a aplicação do desenvolvedor , a qual foi escrita no framework. </p>

    <h2 id="5framework">5. Principais Frameworks utilizados </h2>
    <p>Existem diversos tipos de frameworks disponíveis no mercado, variando conforme a linguagem e o seu uso. </p>

    <h3 id="5.1front"> 5.1 Frameworks front-end</h3>
    <p> São mais específicos para ajudar a desenvolver ou, em alguns casos, corrigir a parte visual de um site ou plataforma. Em outras palavras, a parte onde o usuário irá interagir. </p>
    <ul>
        <li>Bootstrap;</li>
        <li>Foundation; </li>
        <li> Materialize.</li>

    </ul>

    <h3 id="5.2back"> 5.2 Frameworks back-end</h3>
    <p> Já os frameworks back end, cumprem a mesma função de ajudar naquelas tarefas mais específicas, mas neste caso para o desenvolvimento que está por de trás (a parte não visível pelos usuários) do site ou aplicações desenvolvidas. </p>\

    <ul>
        <li>Laravel, para PHP</li>
        <li>CodeIgniter, para PHP </li>
        <li>Rails, para Ruby</li>
        <li> .Net Framework, para plataforma .Net</li>
        <li> Django, para Python</li>
        <li> Express, para Node.js</li>
        <li> Ionic, para criar aplicativos mobile</li>
        <li> Struts, para Java.</li>


    </ul>


    <h3 id="5.3javascript"> 5.3 Frameworks em JavaScript</h3>
    <p>JavaScript é vista como uma linguagem versátil e simples para aprender. O que a fortalece são seus pontos fortes para desenvolvedores front end, seguindo as boas especificações de mercado enquanto a termos de usabilidade e qualidade de código.</p>   
    <table border="3">
        <caption><font color="red" face="Old Standard TT" size="4">TOP JAVASCRIPTS FRAMEWOKS</font> </caption>
        
        <thead>
            <tr>
                <th>Framework
                <th>Porcentagem
            </tr>
        <tbody>
            <tr>
                <td>React.JS</td>
                <td>40.14%</td>
            </tr>
            <br>
            <tr>
                <td>Express.JS</td>
                <td>23.82%</td>
            </tr>
            <br>
            <tr>
                <td>Vue.Js</td>
                <td>18.97%</td>
            </tr>
            <tr>
                <td>Angular.JS</td>
                <td>11.49%</td>
            </tr>
            <tr>
                <td>Svelte</td>
                <td>2.75%</td>
            </tr>
        </tbody><!DOCTYPE html>
<!--tudo tem que estar entre as tags html -->
<html lang="pt-br">

<head>
    <!-- define conjuntos de caracteres que serao utilizados-->
    <meta charset="UTF-8">

    <title> ATIVIDADE 3 </title>

</head>

<!--tudo que sera mostrado na pagina fica dentro do tag body -->

<body bgcolor="#FFFFF0">

    <!-- H1: primeiro nivel- maior titulo- aparece apenas uma vez na pagina -->
    <h1>
        <center>
            <font color="#20B2AA" face="Old Standard TT" size="36">FRAMEWORKS </font>
        </center>
    </h1>
    <center>
        <figure>


            <img src="quebracabeca.jpg" title=" figura1 " width="600" height="400">
            <figcaption> <a href="https://www.lewagon.com/pt-BR/blog/o-que-e-framework"> https://www.lewagon.com/pt-BR/blog/o-que-e-framework </a>

            </figcaption>


        </figure>
    </center>


    <!-- ol: lista  ordenada-->
    <ol>

        <!--li: topicos da lista-->
        <li> <a href="#1introducao">Introdução </a></li>

        <li> <a href="#2definicao">O que é um framework</a> </li>
        <li> <a href="#3vantagens">Vantagens e cuidados ao se utilizar frameworks</a> </li>
        <dd> <a href="#vantagen"> 3.1 Vantagens </a> </dd>
        <dd> <a href="#cuidados"> 3.2 Cuidados </a> </dd>

        <li><a href="#4diferenca"> Diferenças entre Biblioteca e Framework</a></li>
        <li><a href="#5framework">Principais Frameworks utilizados</a></li>

        <dd><a href="#5.1front">5.1 Frameworks front-end</a> </dd>
        <dd><a href="#5.2back">5.2 Frameworks back-end</a></dd>
        <dd><a href="#5.3javascript">5.3 Frameworks em JavaScript</a></dd>

        <li><a href="#6conclusa">Conclusão</a> </li>
        <li><a href="#7referencia"> Referências</a> </li>
    </ol>


    <h2 id="1introducao">1. Introdução </h2>

    <p> Frameworks são vastamente utilizados por programadores e desenvolvedores, cujo objetivo é usufruir de estruturas preestabelecidas,as quais também foram desenvolvidas por uma comunidade plural de programadores, logo essas estruturas já foram testadas, assim elas oferecem um alto grau de segurança e padronização para o código do desenvolvedor que está utilizando determinado framework, bem como aumenta a produtividade do mesmo. A seguir serão apresentados o conceito de framework, suas vantagens, os cuidados que se deve tomar ao se escolher um framework, as diferenças entre framework e biblioteca, bem como os principais frameworks utilizados no desenvolvimento de softwares, tanto front end, quanto back end. </p>

    <h2 id="2definicao">2. O que é um framework </h2>
    <p> Definir o que é um framework em programação, não é uma tarefa simples, uma vez que existem diferentes frameworks e esses por sua vez, possuem uma coleção de diferentes ferramentas que o compõem, como um conjunto de códigos que implementam funcionalidades genéricas e úteis para diferentes projetos, por exemplo uma rotina de teste. Além disso, um framework pode possuir , instruções para desenvolvimento de interfaces, templates, arquivos, ferramentas para a utilização do framework e até mesmo programas completos.</p>

    <p> Assim, uma das definições aceitas para o termo framework é “ Uma coleção de classes abstratas, objetos e padrões dedicados a resolver determinados problemas em uma arquitetura flexível e extensível.”</p>

    <p> Logo, uma boa analogia seria imaginar essas classes , objetos e padrões como sendo, peças de quebra-cabeça universais , que se encaixam em diferentes quebra-cabeças , sendo esses os diferentes projetos que se utilizaram do framework. Contudo, como existem quebra-cabeças de tamanhos e tipos diferentes, nem todas as peças que compõem o framework precisam ser utilizadas, para a conclusão de um projeto, ficando a critério do desenvolvedor escolher as peças mais úteis. Portanto, um framework tem como objetivo resolver problemas recorrentes, com procedimentos genéricos
    </p>

    <h2 id="3vantagens">3. Vantagens e cuidados ao se utilizar frameworks </h2>
    <p>Existem inúmeras vantagens em se utilizar frameworks na hora de se desenvolver aplicações, uma das mais intuitivas é a agilidade na codificação e a otimização de tempo no desenvolvimento do projeto, uma vez que o framework disponibiliza ao programador funcionalidades prontas e adaptáveis conforme a necessidade do projeto. Contudo, alguns cuidados são necessários na hora da escolha do framework.</p>

    <h3 id="vantagen"> 3.1 Vantagens</h3>
    <ul>
        <li>
            <p> Os esforços se voltam para os problemas de alto nível da aplicação, em vez detalhes de configuração, rotinas de teste e validação e padrões do projetos, ficaram a cargo do framework</p>
        </li>
        <li>
            <p> A curva de aprendizagem tênue é pequena, pois os frameworks mais utilizados possuem uma grande quantidade de documentação e uma comunidade ativa, o que é sempre muito importante no compartilhamento e obtenção de conhecimento.</p>
        </li>
        <li>
            <p>Redução na incidência de bugs, pois os códigos dos frameworks costumam passar por diversos testes antes de serem disponibilizados;</p>
        </li>
        <li>
            <p>Padronização de códigos, tendo em vista que o desenvolvedor deve seguir o mesmo padrão de codificação utilizado no framework;</p>
        </li>
        <li>
            <p> Redução de custos operacionais, pois facilita e agiliza o desenvolvimento de um software;</p>
        </li>
        <li>
            <p> Maior consistência das aplicações, visto que as falhas são menores do que se elas tivessem sido produzidas integralmente desde o início.</p>
        </li>
        <li>
            <p>diminuição na redundância do código </p>
        </li>


    </ul>

    <h3 id="cuidados"> 3.2 Cuidados</h3>
    <p>Como os frameworks são construídos a partir de uma linguagem de programação, faz se necessário que o programador, ao utilizar um framework, tenha conhecimentos suficientes da linguagem de programação sob a qual o framework foi construído. </p>

    <p>Além disso, deve-se atentar ao se escolher qual framework usar, uma vez que, a escolha do framework errado, pode resultar no objetivo contrário da utilização de um framework, que é facilitar o desenvolvimento do projeto, culminando no mal funcionamento do produto final que está sendo desenvolvido. </p>
    <p>Logo, dentre os cuidados que devem ser tomados ao se utilizar um framework estão:</p>
    <dd> -Qual o objetivo da utilização desse framework? </dd>
    <dd> - Quando ele foi adicionado no código principal? </dd>
    <dd> - De qual biblioteca ele foi extraído?</dd>
    <dd> - Quais as mudanças feitas no arquivo original? </dd>



    <h2 id="4diferenca">4. Diferenças entre Biblioteca e Framework </h2>


    <p> Primeiro, uma biblioteca se refere a uma coleção de rotinas pré compiladas que serão usadas pelo programador, contudo diferente dos frameworks, as bibliotecas são chamadas pelo código, do programador que as usa, enquanto o framework tem o comportamento oposto, é ele quem chama a aplicação do desenvolvedor , a qual foi escrita no framework. </p>

    <h2 id="5framework">5. Principais Frameworks utilizados </h2>
    <p>Existem diversos tipos de frameworks disponíveis no mercado, variando conforme a linguagem e o seu uso. </p>

    <h3 id="5.1front"> 5.1 Frameworks front-end</h3>
    <p> São mais específicos para ajudar a desenvolver ou, em alguns casos, corrigir a parte visual de um site ou plataforma. Em outras palavras, a parte onde o usuário irá interagir. </p>
    <ul>
        <li>Bootstrap;</li>
        <li>Foundation; </li>
        <li> Materialize.</li>

    </ul>

    <h3 id="5.2back"> 5.2 Frameworks back-end</h3>
    <p> Já os frameworks back end, cumprem a mesma função de ajudar naquelas tarefas mais específicas, mas neste caso para o desenvolvimento que está por de trás (a parte não visível pelos usuários) do site ou aplicações desenvolvidas. </p>\

    <ul>
        <li>Laravel, para PHP</li>
        <li>CodeIgniter, para PHP </li>
        <li>Rails, para Ruby</li>
        <li> .Net Framework, para plataforma .Net</li>
        <li> Django, para Python</li>
        <li> Express, para Node.js</li>
        <li> Ionic, para criar aplicativos mobile</li>
        <li> Struts, para Java.</li>


    </ul>


    <h3 id="5.3javascript"> 5.3 Frameworks em JavaScript</h3>
    <p>JavaScript é vista como uma linguagem versátil e simples para aprender. O que a fortalece são seus pontos fortes para desenvolvedores front end, seguindo as boas especificações de mercado enquanto a termos de usabilidade e qualidade de código.</p>   
    <table border="3">
        <caption><font color="red" face="Old Standard TT" size="4">TOP JAVASCRIPTS FRAMEWOKS</font> </caption>
        
        <thead>
            <tr>
                <th>Framework
                <th>Porcentagem
            </tr>
        <tbody>
            <tr>
                <td>React.JS</td>
                <td>40.14%</td>
            </tr>
            <br>
            <tr>
                <td>Express.JS</td>
                <td>23.82%</td>
            </tr>
            <br>
            <tr>
                <td>Vue.Js</td>
                <td>18.97%</td>
            </tr>
            <tr>
                <td>Angular.JS</td>
                <td>11.49%</td>
            </tr>
            <tr>
                <td>Svelte</td>
                <td>2.75%</td>
            </tr>
        </tbody>

    </table>
   

    <h2 id="6conclusa">6.Conclusão </h2>

    <p>Concluindo, os frameworks são praticamente indispensáveis no desenvolvimento de projetos de médio e grande porte, bem como, facilitam e poupam tempo do desenvolvedor, oferecendo ainda segurança e otimização ao se desenvolver as linhas de código de uma aplicação. </p>

    <h2 id="7referencia"><b>Referências</b></h2>

    <ol>
        <li> <a href="https://www.alura.com.br/artigos/framework-o-que-e-pra-que-serve-essa-ferramenta?gclid=Cj0KCQiAmpyRBhC-ARIsABs2EAq4O06fXuiGmvxIaUB14pB9V9Xnxm9by-UVYPHoI73Ypu-t0b6Ro1waArqIEALw_wcB"> https://www.alura.com.br/artigos/framework-o-que-e-pra-que-serve-essa-ferramenta?gclid=Cj0KCQiAmpyRBhC-ARIsABs2EAq4O06fXuiGmvxIaUB14pB9V9Xnxm9by-UVYPHoI73Ypu-t0b6Ro1waArqIEALw_wcB" </a></li>

        <li> <a href="https://www.lewagon.com/pt-BR/blog/o-que-e-framework"> https://www.lewagon.com/pt-BR/blog/o-que-e-framework</a> </li>
        <li><a href="https://www.hostgator.com.br/blog/frameworks-na-programacao/">https://www.hostgator.com.br/blog/frameworks-na-programacao/ </a></li>
        <li><a href=" https://hackr.io/blog/what-is-frameworks</li>">https://hackr.io/blog/what-is-frameworks </a></li>
        <li><a href=" https://codeinstitute.net/global/blog/what-is-a-framework/"> https://codeinstitute.net/global/blog/what-is-a-framework/</a></li>
        <li><a href="https://cocosolution.com/en/what-is-a-framework/</li>">https://cocosolution.com/en/what-is-a-framework/ </a></li>
        <li><a href="https://www.netsolutions.com/insights/what-is-a-framework-in-programming/">https://www.netsolutions.com/insights/what-is-a-framework-in-programming/ </a></li>


    </ol>





</body>

</html>


    </table>
   

    <h2 id="6conclusa">6.Conclusão </h2>

    <p>Concluindo, os frameworks são praticamente indispensáveis no desenvolvimento de projetos de médio e grande porte, bem como, facilitam e poupam tempo do desenvolvedor, oferecendo ainda segurança e otimização ao se desenvolver as linhas de código de uma aplicação. </p>

    <h2 id="7referencia"><b>Referências</b></h2>

    <ol>
        <li> <a href="https://www.alura.com.br/artigos/framework-o-que-e-pra-que-serve-essa-ferramenta?gclid=Cj0KCQiAmpyRBhC-ARIsABs2EAq4O06fXuiGmvxIaUB14pB9V9Xnxm9by-UVYPHoI73Ypu-t0b6Ro1waArqIEALw_wcB"> https://www.alura.com.br/artigos/framework-o-que-e-pra-que-serve-essa-ferramenta?gclid=Cj0KCQiAmpyRBhC-ARIsABs2EAq4O06fXuiGmvxIaUB14pB9V9Xnxm9by-UVYPHoI73Ypu-t0b6Ro1waArqIEALw_wcB" </a></li>

        <li> <a href="https://www.lewagon.com/pt-BR/blog/o-que-e-framework"> https://www.lewagon.com/pt-BR/blog/o-que-e-framework</a> </li>
        <li><a href="https://www.hostgator.com.br/blog/frameworks-na-programacao/">https://www.hostgator.com.br/blog/frameworks-na-programacao/ </a></li>
        <li><a href=" https://hackr.io/blog/what-is-frameworks</li>">https://hackr.io/blog/what-is-frameworks </a></li>
        <li><a href=" https://codeinstitute.net/global/blog/what-is-a-framework/"> https://codeinstitute.net/global/blog/what-is-a-framework/</a></li>
        <li><a href="https://cocosolution.com/en/what-is-a-framework/</li>">https://cocosolution.com/en/what-is-a-framework/ </a></li>
        <li><a href="https://www.netsolutions.com/insights/what-is-a-framework-in-programming/">https://www.netsolutions.com/insights/what-is-a-framework-in-programming/ </a></li>


    </ol>





</body>

</html>
